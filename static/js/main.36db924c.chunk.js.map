{"version":3,"sources":["containers/Header/style.js","components/Header/title/index.js","components/Header/navbar/style.js","components/Header/navbar/index.js","containers/Header/index.js","containers/Main/style.js","components/Main/introduction/style.js","components/Main/if_else/index.js","components/Main/function/index.js","components/Main/constans/index.js","components/Main/reference/index.js","components/Main/declaring/index.js","components/Main/variables/index.js","components/Main/data_types/index.js","components/Main/hello_world/index.js","components/Main/introduction/index.js","components/Main/variable_scope/index.js","components/Main/javascript_java/index.js","components/Main/while_statement/index.js","components/Main/global_variables/index.js","components/Main/what_should_you_know/index.js","containers/Main/index.js","containers/App/style.js","serviceWorker.js","index.js","containers/App/index.js"],"names":["HeaderContainer","styled","div","_templateObject","title","react_default","a","createElement","NavbarContainer","nav","style_templateObject","LinkContainer","_templateObject2","navbar","href","rel","Header","MainContainer","Main_style_templateObject","Section","section","introduction_style_templateObject","if_else","id","style","marginLeft","Main_function","constans","reference","declaring","variables","data_types","hello_world","introduction","variable_scope","javascript_java","while_statement","global_variables","what_should_you_know","Main","Container","App_style_templateObject","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.36db924c.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const HeaderContainer = styled.div`\n  border-right: solid;\n  border-color: rgba(0, 22, 22, 0.4);\n  height: 100%;\n  position: fixed;\n  max-width: 290px;\n  left: 0px;\n`;\n","import React from \"react\";\n\nexport default () => {\n  return <header>JS Documentation</header>;\n};\n","import styled from \"styled-components\";\n\nexport const NavbarContainer = styled.nav`\n  height: 88%;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\n\nexport const LinkContainer = styled.div`\n  border: 1px solid #4d4e53;\n  padding: 10px;\n  width: 100%;\n`;\n","import React from \"react\";\nimport { NavbarContainer, LinkContainer } from \"./style\";\n\nexport default () => {\n  return (\n    <NavbarContainer>\n      <LinkContainer>\n        <a href=\"#introduction\" rel=\"internal\">\n          Introduction\n        </a>\n      </LinkContainer>\n      <LinkContainer>\n        <a href=\"#what_you_should_already_know\" rel=\"internal\">\n          What you should already know\n        </a>\n      </LinkContainer>\n      <LinkContainer>\n        <a href=\"#js_java\" rel=\"internal\">\n          Javascript and java\n        </a>\n      </LinkContainer>\n      <LinkContainer>\n        <a href=\"#hello_world\" rel=\"internal\">\n          Hello world\n        </a>\n      </LinkContainer>\n      <LinkContainer>\n        <a href=\"#variables\" rel=\"internal\">\n          Variables\n        </a>\n      </LinkContainer>\n      <LinkContainer>\n        <a href=\"#declaring_variables\" rel=\"internal\">\n          Declaring Variables\n        </a>\n      </LinkContainer>\n      <LinkContainer>\n        <a href=\"#variable_scope\" rel=\"internal\">\n          Variable Scope\n        </a>\n      </LinkContainer>\n      <LinkContainer>\n        <a href=\"#global_variables\" rel=\"internal\">\n          Global Variables\n        </a>\n      </LinkContainer>\n      <LinkContainer>\n        <a href=\"#constans\" rel=\"internal\">\n          Constans\n        </a>\n      </LinkContainer>\n      <LinkContainer>\n        <a href=\"#data_types\" rel=\"internal\">\n          Data Types\n        </a>\n      </LinkContainer>\n      <LinkContainer>\n        <a href=\"#if_else_statement\" rel=\"internal\">\n          if...else statement\n        </a>\n      </LinkContainer>\n      <LinkContainer>\n        <a href=\"#while_statement\" rel=\"internal\">\n          while statement\n        </a>\n      </LinkContainer>\n      <LinkContainer>\n        <a href=\"#function_declaration\" rel=\"internal\">\n          Function Declaration\n        </a>\n      </LinkContainer>\n      <LinkContainer>\n        <a href=\"#reference\" rel=\"internal\">\n          Reference\n        </a>\n      </LinkContainer>\n    </NavbarContainer>\n  );\n};\n","import React from \"react\";\nimport { HeaderContainer } from \"./style\";\nimport Title from \"../../components/Header/title\";\nimport Navbar from \"../../components/Header/navbar\";\n\nexport default () => {\n  return (\n    <HeaderContainer>\n      <Title />\n      <Navbar />\n    </HeaderContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: space-between;\n  margin-left: 310px;\n`;\n","import styled from \"styled-components\";\n\nexport const Section = styled.section`\n  display: flex;\n  flex-flow: column wrap;\n  align-items: flex-start;\n  margin-bottom: 30px;\n  width: 98%;\n`;\n","import React from \"react\";\nimport { Section } from \"../introduction/style\";\n\nexport default () => {\n  return (\n    <Section id=\"if_else_statement\">\n      <header>if...else statement</header>\n      <article>\n        <p>\n          Use the if statement to execute a statement if a logical condition is\n          true. Use the optional else clause to execute a statement if the\n          condition is false. An if statement looks as follows:\n        </p>\n        <pre>\n          <code>\n            <p>{\"if (condition) {\"}</p>\n            <p style={{ marginLeft: \"20px\" }}>{\"statement_1;\"}</p>\n            <p>{\"} else {\"}</p>\n            <p style={{ marginLeft: \"20px\" }}>{\"statement_2;\"}</p>\n            <p>{\"}\"}</p>\n          </code>\n        </pre>\n        <p>\n          condition can be any expression that evaluates to true or false. See\n          Boolean for an explanation of what evaluates to true and false. If\n          condition evaluates to true, statement_1 is executed; otherwise,\n          statement_2 is executed. statement_1 and statement_2 can be any\n          statement, including further nested if statements.\n        </p>\n        <p>\n          You may also compound the statements using else if to have multiple\n          conditions tested in sequence, as follows:\n        </p>\n        <pre>\n          <code>\n            <article>\n              <p>{`if (condition_1) {\n    statement_1;\n} else if (condition_2) {\n    statement_2;\n} else if (condition_n) {\n    statement_n;\n} else {\n    statement_last;\n    }\n                    `}</p>\n            </article>\n          </code>\n        </pre>\n        <p>\n          In the case of multiple conditions only the first logical condition\n          which evaluates to true will be executed. To execute multiple\n          statements, group them within a block statement () . In general, it's\n          good practice to always use block statements, especially when nesting\n          if statements:\n        </p>\n        <pre>\n          <code>\n            <p>{`if (condition) {\n  statement_1_runs_if_condition_is_true;\n  statement_2_runs_if_condition_is_true;\n} else {\n  statement_3_runs_if_condition_is_false;\n  statement_4_runs_if_condition_is_false;\n}\n                `}</p>\n          </code>\n        </pre>\n        <p>\n          It is advisable to not use simple assignments in a conditional\n          expression, because the assignment can be confused with equality when\n          glancing over the code. For example, do not use the following code:\n        </p>\n        <p>\n          It is advisable to not use simple assignments in a conditional\n          expression, because the assignment can be confused with equality when\n          glancing over the code. For example, do not use the following code:\n        </p>\n        <pre>\n          <code>\n            <p>{`if (x = y) {\n  /* statements here */\n}`}</p>\n          </code>\n        </pre>\n        <p>\n          If you need to use an assignment in a conditional expression, a common\n          practice is to put additional parentheses around the assignment. For\n          example:\n        </p>\n        <pre>\n          <code>\n            <p>{`if ((x = y)) {\n  /* statements here */\n}`}</p>\n          </code>\n        </pre>\n      </article>\n    </Section>\n  );\n};\n","import React from \"react\";\nimport { Section } from \"../introduction/style\";\n\nexport default () => {\n  return (\n    <Section id=\"function_declaration\">\n      <header>Function declarations</header>\n      <article>\n        <p>\n          A function definition (also called a function declaration, or function\n          statement) consists of the function keyword, followed by:\n        </p>\n        <li>The name of the function.</li>\n        <li>\n          A list of arguments to the function, enclosed in parentheses and\n          separated by commas.\n        </li>\n        <li>\n          The JavaScript statements that define the function, enclosed in curly\n          brackets, {}.\n        </li>\n        <p>\n          For example, the following code defines a simple function named\n          square:\n        </p>\n        <pre>\n          <code>\n            <p>{`function square(number) {\n  return number * number;\n}`}</p>\n          </code>\n        </pre>\n        <p>\n          The function square takes one argument, called number. The function\n          consists of one statement that says to return the argument of the\n          function (that is, number) multiplied by itself. The return statement\n          specifies the value returned by the function.\n        </p>\n        <pre>\n          <code>\n            <p>{\"return number * number;\"}</p>\n          </code>\n        </pre>\n        <p>\n          Primitive parameters (such as a number) are passed to functions by\n          value; the value is passed to the function, but if the function\n          changes the value of the parameter, this change is not reflected\n          globally or in the calling function.\n        </p>\n      </article>\n    </Section>\n  );\n};\n","import React from \"react\";\nimport { Section } from \"../introduction/style\";\n\nexport default () => {\n  return (\n    <Section id=\"constans\">\n      <header>Constans</header>\n      <article>\n        <p>\n          You can create a read-only, named constant with the const keyword. The\n          syntax of a constant identifier is the same as for a variable\n          identifier: it must start with a letter, underscore or dollar sign and\n          can contain alphabetic, numeric, or underscore characters.\n        </p>\n        <pre>\n          <code>\n            <p>{\"const PI = 3.14;\"}</p>\n          </code>\n        </pre>\n        <p>\n          A constant cannot change value through assignment or be re-declared\n          while the script is running. It has to be initialized to a value.\n        </p>\n        <p>\n          The scope rules for constants are the same as those for let block\n          scope variables. If the const keyword is omitted, the identifier is\n          assumed to represent a variable.\n        </p>\n        <p>\n          You cannot declare a constant with the same name as a function or\n          variable in the same scope. For example:\n        </p>\n        <pre>\n          <code>\n            <p>{\"// THIS WILL CAUSE AN ERROR\"}</p>\n            <p>{\"function f() {};\"}</p>\n            <p>{\"const f = 5;\"}</p>\n            <p>{\"// THIS WILL CAUSE AN ERROR ALS\"}</p>\n            <p>{\"function f() {\"}</p>\n            <p style={{ marginLeft: \"20px\" }}>{\"const g = 5;\"}</p>\n            <p style={{ marginLeft: \"20px\" }}>{\"var g;\"}</p>\n            <p style={{ marginLeft: \"20px\" }}>{\"//statements\"}</p>\n            <p>{\"}\"}</p>\n          </code>\n        </pre>\n        <p>\n          However, object attributes are not protected, so the following\n          statement is executed without problems.\n        </p>\n        <pre>\n          <code>\n            <p>{\"const MY_OBJECT = {'key': 'value'};\"}</p>\n            <p>{\"MY_OBJECT.key = 'otherValue'\"}</p>\n          </code>\n        </pre>\n      </article>\n    </Section>\n  );\n};\n","import React from \"react\";\nimport { Section } from \"../introduction/style\";\n\nexport default () => {\n  return (\n    <Section id=\"reference\">\n      <header>Reference</header>\n      <li>\n        All the documentation in this page is taken from{\" \"}\n        <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide\">\n          MDN\n        </a>\n      </li>\n    </Section>\n  );\n};\n","import React from \"react\";\nimport { Section } from \"../introduction/style\";\n\nexport default () => {\n  return (\n    <Section id=\"declaring_variables\">\n      <header>Declaring variables</header>\n      <article>\n        <p>You can declare a variable in three ways:</p>\n        <p>With the keyword var. For example,</p>\n        <pre>\n          <code>\n            <p>{\"var x = 42.\"}</p>\n          </code>\n        </pre>\n        <p>\n          This syntax can be used to declare both local and global variables.\n        </p>\n        <p>By simply assigning it a value. For example,</p>\n        <pre>\n          <code>\n            <p>{\"x = 42.\"}</p>\n          </code>\n        </pre>\n        <p>\n          This always declares a global variable. It generates a strict\n          JavaScript warning. You shouldn't use this variant.\n        </p>\n        <p>With the keyword let. For example,</p>\n        <pre>\n          <code>\n            <p>{\" let y = 13.\"}</p>\n          </code>\n        </pre>\n        <p>\n          This syntax can be used to declare a block scope local variable. See\n          Variable scope below.\n        </p>\n      </article>\n    </Section>\n  );\n};\n","import React from \"react\";\nimport { Section } from \"../introduction/style\";\n\nexport default () => {\n  return (\n    <Section id=\"variables\">\n      <header>Variables</header>\n      <article>\n        <p>\n          You use variables as symbolic names for values in your application.\n          The names of variables, called identifiers, conform to certain rules.\n        </p>\n        <p>\n          A JavaScript identifier must start with a letter, underscore (_), or\n          dollar sign ($); subsequent characters can also be digits (0-9).\n          Because JavaScript is case sensitive, letters include the characters\n          \"A\" through \"Z\" (uppercase) and the characters \"a\" through \"z\"\n          (lowercase).\n        </p>\n        <p>\n          You can use ISO 8859-1 or Unicode letters such as å and ü in\n          identifiers. You can also use the Unicode escape sequences as\n          characters in identifiers. Some examples of legal names are\n          Number_hits, temp99, and _name.\n        </p>\n      </article>\n    </Section>\n  );\n};\n","import React from \"react\";\nimport { Section } from \"../introduction/style\";\n\nexport default () => {\n  return (\n    <Section id=\"data_types\">\n      <header>Data Types</header>\n      <article>\n        <p>The latest ECMAScript standard defines seven data types:</p>\n        <li />\n        <p>Six data types that are primitives:</p>\n        <li>Boolean. true and false.</li>\n        <li>\n          null. A special keyword denoting a null value. Because JavaScript is\n          case-sensitive, null is not the same as Null, NULL, or any other\n          variant.\n        </li>\n        <li>undefined. A top-level property whose value is undefined.</li>\n        <li>Number. 42 or 3.14159</li>\n        <li>String. \"Howdy\"</li>\n        <li>\n          Symbol (new in ECMAScript 2015). A data type whose instances are\n          unique and immutable\n        </li>\n        <p>\n          Although these data types are a relatively small amount, they enable\n          you to perform useful functions with your applications. Objects and\n          functions are the other fundamental elements in the language. You can\n          think of objects as named containers for values, and functions as\n          procedures that your application can perform.\n        </p>\n      </article>\n    </Section>\n  );\n};\n","import React from \"react\";\nimport { Section } from \"../introduction/style\";\n\nexport default () => {\n  return (\n    <Section id=\"hello_world\">\n      <header>Hello world</header>\n      <article>\n        <p>\n          To get started with writing JavaScript, open the Scratchpad and write\n          your first \"Hello world\" JavaScript code:\n        </p>\n\n        <pre>\n          <code>\n            <p>{\"function greetMe(yourName) { \"}</p>\n            <p style={{ marginLeft: \"10px\" }}>{\"alert(Hello  + yourName);\"}</p>\n            <p>{\"}\"}</p>\n            <p>{\"greetMe(World);\"}</p>\n          </code>\n        </pre>\n        <p>\n          Select the code in the pad and hit Ctrl+R to watch it unfold in your\n          browser!\n        </p>\n      </article>\n    </Section>\n  );\n};\n","import React from \"react\";\nimport { Section } from \"./style\";\n\nexport default () => {\n  return (\n    <Section id=\"introduction\">\n      <header>Introduction</header>\n      <article>\n        <p>\n          JavaScript is a cross-platform, object-oriented scripting language. It\n          is a small and lightweight language. Inside a host environment (for\n          example, a web browser), JavaScript can be connected to the objects of\n          its environment to provide programmatic control over them.\n        </p>\n        <p>\n          In contrast to Java's compile-time system of classes built by\n          declarations, JavaScript supports a runtime system based on a small\n          number of data types representing numeric, Boolean, and string values.\n          JavaScript has a prototype-based object model instead of the more\n          common class-based object model. The prototype-based model provides\n          dynamic inheritance; that is, what is inherited can vary for\n          individual objects. JavaScript also supports functions without any\n          special declarative requirements. Functions can be properties of\n          objects, executing as loosely typed methods.\n        </p>\n        <li>\n          Client-side JavaScript extends the core language by supplying objects\n          to control a browser and its Document Object Model (DOM). For example,\n          client-side extensions allow an application to place elements on an\n          HTML form and respond to user events such as mouse clicks, form input,\n          and page navigation.\n        </li>\n        <li>\n          Server-side JavaScript extends the core language by supplying objects\n          relevant to running JavaScript on a server. For example, server-side\n          extensions allow an application to communicate with a database,\n          provide continuity of information from one invocation to another of\n          the application, or perform file manipulations on a server.\n        </li>\n      </article>\n    </Section>\n  );\n};\n","import React from \"react\";\nimport { Section } from \"../introduction/style\";\n\nexport default () => {\n  return (\n    <Section id=\"variable_scope\">\n      <header>Variable scope</header>\n      <article>\n        <p>\n          When you declare a variable outside of any function, it is called a\n          global variable, because it is available to any other code in the\n          current document. When you declare a variable within a function, it is\n          called a local variable, because it is available only within that\n          function.\n        </p>\n        <p>\n          JavaScript before ECMAScript 2015 does not have block statement scope;\n          rather, a variable declared within a block is local to the function\n          (or global scope) that the block resides within. For example the\n          following code will log 5, because the scope of x is the function (or\n          global context) within which x is declared, not the block, which in\n          this case is an if statement.\n        </p>\n        <pre>\n          <code>\n            <p>{\"if (true) {\"}</p>\n            <p>{\"var x = 5;\"}</p>\n            <p>{\"}\"}</p>\n            <p>{\"console.log(x);  // 5\"}</p>\n          </code>\n        </pre>\n        <p>\n          This behavior changes, when using the let declaration introduced in\n          ECMAScript 2015.\n        </p>\n        <pre>\n          <code>\n            <p>{\"if (true) {\"}</p>\n            <p>{\"let y = 5;\"}</p>\n            <p>{\"}\"}</p>\n            <p>{\"console.log(y);\"}</p>\n            <p>{\"// ReferenceError: y is not defined\"}</p>\n          </code>\n        </pre>\n      </article>\n    </Section>\n  );\n};\n","import React from \"react\";\nimport { Section } from \"../introduction/style\";\n\nexport default () => {\n  return (\n    <Section id=\"js_java\">\n      <header>JavaScript and Java</header>\n      <article>\n        <p>\n          JavaScript and Java are similar in some ways but fundamentally\n          different in some others. The JavaScript language resembles Java but\n          does not have Java's static typing and strong type checking.\n          JavaScript follows most Java expression syntax, naming conventions and\n          basic control-flow constructs which was the reason why it was renamed\n          from LiveScript to JavaScript.\n        </p>\n        <p>\n          In contrast to Java's compile-time system of classes built by\n          declarations, JavaScript supports a runtime system based on a small\n          number of data types representing numeric, Boolean, and string values.\n          JavaScript has a prototype-based object model instead of the more\n          common class-based object model. The prototype-based model provides\n          dynamic inheritance; that is, what is inherited can vary for\n          individual objects. JavaScript also supports functions without any\n          special declarative requirements. Functions can be properties of\n          objects, executing as loosely typed methods.\n        </p>\n        <p>\n          JavaScript is a very free-form language compared to Java. You do not\n          have to declare all variables, classes, and methods. You do not have\n          to be concerned with whether methods are public, private, or\n          protected, and you do not have to implement interfaces. Variables,\n          parameters, and function return types are not explicitly typed.\n        </p>\n      </article>\n    </Section>\n  );\n};\n","import React from \"react\";\nimport { Section } from \"../introduction/style\";\n\nexport default () => {\n  return (\n    <Section id=\"while_statement\">\n      <header>while statement</header>\n      <article>\n        <p>\n          A while statement executes its statements as long as a specified\n          condition evaluates to true. A while statement looks as follows:\n        </p>\n        <pre>\n          <code>\n            <p>{`while (condition)\n  statement`}</p>\n          </code>\n        </pre>\n        <p>\n          If the condition becomes false, statement within the loop stops\n          executing and control passes to the statement following the loop.\n        </p>\n        <p>\n          The condition test occurs before statement in the loop is executed. If\n          the condition returns true, statement is executed and the condition is\n          tested again. If the condition returns false, execution stops and\n          control is passed to the statement following while.\n        </p>\n        <p>\n          To execute multiple statements, use a block statement () to group\n          those statements.\n        </p>\n        <p>Example:</p>\n        <p>\n          The following while loop iterates as long as n is less than three:\n        </p>\n        <pre>\n          <code>\n            <p>{`var n = 0;\nvar x = 0;\nwhile (n < 3) {\n  n++;\n  x += n;\n}\n`}</p>\n          </code>\n        </pre>\n        <p>\n          With each iteration, the loop increments n and adds that value to x.\n          Therefore, x and n take on the following values:\n        </p>\n        <li>After the first pass: n = 1 and x = 1</li>\n        <li>After the second pass: n = 2 and x = 3</li>\n        <li>After the third pass: n = 3 and x = 6</li>\n        <p>\n          After completing the third pass, the condition n \"\" 3 is no longer\n          true, so the loop terminates.\n        </p>\n      </article>\n    </Section>\n  );\n};\n","import React from \"react\";\nimport { Section } from \"../introduction/style\";\n\nexport default () => {\n  return (\n    <Section id=\"global_variables\">\n      <header>Global variables</header>\n      <article>\n        <p>\n          Global variables are in fact properties of the global object. In web\n          pages the global object is window, so you can set and access global\n          variables using the window.variable syntax.\n        </p>\n        <p>\n          Consequently, you can access global variables declared in one window\n          or frame from another window or frame by specifying the window or\n          frame name. For example, if a variable called phoneNumber is declared\n          in a document, you can refer to this variable from an iframe as\n          parent.phoneNumber.\n        </p>\n      </article>\n    </Section>\n  );\n};\n","import React from \"react\";\nimport { Section } from \"../introduction/style\";\n\nexport default () => {\n  return (\n    <Section id=\"what_you_should_already_know\">\n      <header>What you should already know</header>\n      <article>\n        <p>This guide assumes you have the following basic background:</p>\n        <li>\n          A general understanding of the Internet and the World Wide Web (WWW).\n        </li>\n        <li>Good working knowledge of HyperText Markup Language (HTML).</li>\n        <li>\n          Some programming experience. If you are new to programming, try one of\n          the tutorials linked on the main page about JavaScript.\n        </li>\n      </article>\n    </Section>\n  );\n};\n","import React from \"react\";\nimport { MainContainer } from \"./style\";\nimport IfElse from \"../../components/Main/if_else\";\nimport Function from \"../../components/Main/function\";\nimport Constans from \"../../components/Main/constans\";\nimport Reference from \"../../components/Main/reference\";\nimport Declaring from \"../../components/Main/declaring\";\nimport Variables from \"../../components/Main/variables\";\nimport DataTypes from \"../../components/Main/data_types\";\nimport HelloWorld from \"../../components/Main/hello_world\";\nimport Introduction from \"../../components/Main/introduction\";\nimport VariableScope from \"../../components/Main/variable_scope\";\nimport JavascriptJava from \"../../components/Main/javascript_java\";\nimport WhileStatement from \"../../components/Main/while_statement\";\nimport GlobalVariables from \"../../components/Main/global_variables\";\nimport WhatYouShouldKnow from \"../../components/Main/what_should_you_know\";\n\nexport default () => {\n  return (\n    <MainContainer>\n      <Introduction />\n      <WhatYouShouldKnow />\n      <JavascriptJava />\n      <HelloWorld />\n      <Variables />\n      <Declaring />\n      <VariableScope />\n      <GlobalVariables />\n      <Constans />\n      <DataTypes />\n      <IfElse />\n      <WhileStatement />\n      <Function />\n      <Reference />\n    </MainContainer>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-top: 20px;\n`;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\nimport \"./css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.register();\n","import React from \"react\";\nimport Header from \"../Header\";\nimport Main from \"../Main\";\nimport { Container } from \"./style\";\n\nexport default () => {\n  return (\n    <Container>\n      <Header />\n      <Main />\n    </Container>\n  );\n};\n"],"sourceRoot":""}